apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = "org.tools4j"
version = '1.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs 'lib'
    }
}

buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	
	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
		classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
	}
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'com.github.hierynomus.license'

    group 'org.tools4j'
    version '1.0.1-SNAPSHOT'

    sourceCompatibility = 1.8

    def generatedSrcName = "generated-src"
    def generatedSrc = "$buildDir/$generatedSrcName"

    repositories {
        mavenCentral()
    }

    uploadArchives {
        repositories {
            flatDir {
                dirs 'build/repositories'
            }
        }
    }

    task copyLicense(type: Copy) {
        from('.')
        into('build/resources/main/')
        include('LICENSE.md')
        rename('LICENSE.md', 'LICENSE.txt')
    }

    task copyLicenseToSrc(type: Copy) {
        from('build/resources/main/')
        into(generatedSrc)
        include('LICENSE.txt')
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    copyLicense.dependsOn processResources
    copyLicenseToSrc.dependsOn copyLicense
    compileJava.dependsOn licenseFormat,copyLicense,copyLicenseToSrc

    javadoc {
        options.showFromPackage()
        options.linkSource()
        options.links("http://docs.oracle.com/javase/8/docs/api/");
        options.windowTitle = "mmap API ${version}"
        options.overview = "../src/main/java/overview.html";
    }

    license {
        header rootProject.file('src/main/resources/LICENSE.template')
        strictCheck true
        include "**/*.java"
        ignoreFailures true
        ext.year = Calendar.getInstance().get(Calendar.YEAR)
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
            csv.enabled = false
        }
    }
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    dependsOn = subprojects.test
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData = files(subprojects.jacocoTestReport.executionData)
    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}